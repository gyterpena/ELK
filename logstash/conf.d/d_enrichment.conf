filter {
        #Enrichment
        if [src][ip] #=~ /^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$/ #commented out check for valid IP
           {
           cidr {
               add_field => { "src_homenet" => "Site1" }
               address => [ "%{[src][ip]}" ]
               network => [ "PubRange1", "PubRange2", "PrivRange" ]
           }
           cidr {
               add_field => { "src_homenet" => "Site2" }
               address => [ "%{[src][ip]}" ]
               network => [ "PubRange1", "PubRange2", "PrivRange" ]
           }
           if ![src_homenet] {
               cidr {
                   add_field => { "src_homenet" => "rfc1819" }
                   address => [ "%{[src][ip]}" ]
                   network => [ "127.0.0.0/8", "192.168.0.0/16", "172.16.0.0/12", "10.0.0.0/8", "0.0.0.0/32", "255.255.255.255/32", "fd00::/8", "224.0.0.0/24", "::1/128" ]
               }
               if ![src_homenet] {
                   mutate {
                   add_field => { "src_external" => "true" }
                   }
               }
           }
        }#End if src ip

        if [dst][ip] #=~ /^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$/ #commented out check for valid IP
           {
            cidr {
               add_field => { "dst_homenet" => "Site1" }
               address => [ "%{[dst][ip]}" ]
               network => [ "PubRange1", "PubRange2", "PrivRange" ]
           }
           cidr {
               add_field => { "dst_homenet" => "Site2" }
               address => [ "%{[dst][ip]}" ]
               network => [ "PubRange1", "PubRange2", "PrivRange" ]
           }
           if ![dst_homenet] {
               cidr {
                   add_field => { "dst_homenet" => "rfc1819" }
                   address => [ "%{[dst][ip]}" ]
                   network => [ "127.0.0.0/8", "192.168.0.0/16", "172.16.0.0/12", "10.0.0.0/8", "0.0.0.0/32", "255.255.255.255/32", "fd00::/8", "224.0.0.0/24", "::1/128" ]
               }
               if ![dst_homenet] {
                   mutate {
                   add_field => { "dst_external" => "true"}
                   }
               }
           }
        }#End if dst.ip

        if [tls][fingerprint] {
         translate {
            field => "[tls][fingerprint]"
            destination => "[lookup][blk_tls]"
            dictionary_path => '/etc/logstash/translate/malwareTLS.json'
            add_tag => [ "blacklist", "tls_bla" ]
            refresh_interval => "86400"
            refresh_behaviour => replace
         }
        }

        if [http][http_user_agent]{
          useragent{
            source => "[http][http_user_agent]"
            target => "user-agent"
          }
        }
        if [http][url_full] and [dst_external] {
            translate {
                field => "[http][url_full]"
                destination => "[lookup][blk_url]"
                dictionary_path => '/etc/logstash/translate/url.json'
                add_tag => [ "blacklist", "url_bla" ]
                refresh_interval => "900"
                refresh_behaviour => replace
            }
        }
        if [src][ip] or [dst][ip]{
            if [dst_external] and [src_external] {
                mutate {
                    add_tag => ["src_dst_external"]
                }
            }
            else if [dst_external] {
                mutate{
                    copy => { "[dst][ip]" => "[lookup][ip]" }
                }
            }
            else if [src_external] {
                mutate{
                    copy => { "[src][ip]" => "[lookup][ip]" }
                }
            }
            if [http][xff] and [http][xff] !~ "^unknown" {
                mutate {
                    copy => { "[http][xff]" => "[lookup][ip]" }
                }
                if [lookup][ip] =~ ","{
                    mutate {
                        gsub => [ "[lookup][ip]", ",.*", "" ]
                    }
                }
            }
            if [lookup][ip]{
                geoip {
                    database => "/etc/logstash/translate/GeoLite2-City.mmdb"
                    source => "[lookup][ip]"
                    target => "[lookup][geoip]"
                    add_tag => [ "geo" ]
                }
                geoip {
                    database => "/etc/logstash/translate/GeoLite2-ASN.mmdb"
                    source => "[lookup][ip]"
                    target => "[lookup][geoip][ASN]"
                    add_tag => [ "geo_ASN" ]
                }
                if ![lookup][host] {
                    mutate {
                        copy => { "[lookup][ip]" => "[lookup][host]" }
                        add_field => [ "[lookup][ip_senderbase]", "http://www.senderbase.org/lookup/?search_string=%{[lookup][ip]}" ]
                        add_field => [ "[lookup][ip_virustotal]", "https://www.virustotal.com/#/ip-address/%{[lookup][ip]}" ]
                    }
                    dns {
                        reverse => [ "[lookup][host]" ]
                        action => replace
                        add_tag => [ "dns_hit" ]
                        failed_cache_size => 10000
                        failed_cache_ttl => 3600
                        hit_cache_size => 10000
                        hit_cache_ttl => 3600
                    }
                   if "dns_hit" not in [tags] { mutate { remove_field => [ "[lookup][host]" ] } }
                }
                if [lookup][host] {
                    mutate {
                        add_field => [ "[lookup][host_urlquery]", "http://www.urlvoid.com/scan/%{[lookup][host]}" ]
                        add_field => [ "[lookup][host_virustotal]", "https://www.virustotal.com/en/domain/%{[lookup][host]}/information" ]
                    }
                    translate {
                        field => "[lookup][host]"
                        destination => "[lookup][blk_host]"
                        dictionary_path => '/etc/logstash/translate/fqdn-combine.json'
                        add_tag => [ "blacklist", "host_bla" ]
                        refresh_interval => "86400"
                        refresh_behaviour => replace
                    }
                }
                if [dst_external] {
                    translate {
                        field => "[lookup][ip]"
                        destination => "[lookup][blk_ip]"
                        dictionary_path => '/etc/logstash/translate/ipv4-out-combine.json'
                        add_tag => [ "blacklist", "out_ip_bla" ]
                        refresh_interval => "86400"
                        refresh_behaviour => replace
                    }
                }
                if [src_external] {
                    translate {
                        field => "[lookup][ip]"
                        destination => "[lookup][blk_ip]"
                        dictionary_path => '/etc/logstash/translate/ipv4-in-combine.json'
                        add_tag => [ "blacklist", "in_ip_bla" ]
                        refresh_interval => "86400"
                        refresh_behaviour => replace
                    }
                }
            }
          mutate {
               remove_field => ["[lookup][geoip][ASN][ip]", "dest_ip", "src_ip", "dest_port", "src_port", "payload", "packet", "[beat][hostname]", "[beat][name]", "timestamp"]
          }
        } #End if src.ip or dst.ip

        #Tag Noise
        if [event_type] == "alert" {
           #Add signature lookup url
            mutate {
                add_field => [ "[alert][signature_url]", "http://doc.emergingthreats.net/bin/view/Main/%{[alert][signature_id]}" ]
            }
            #End Signature lookup
            if [alert][signature_id] == 123456 and [src_ip] == "1.1.1.1" { mutate { add_field => { "noise" => "1" } } }
            else if [alert][signature_id] == 1234567 and [http][hostname] == "www.google-analytics.com" { mutate { add_field => { "noise" => "2" } } }

        }#End Tag Noise

}#End filter

