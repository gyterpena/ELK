filter {
 if [type] == "suricata" {
        mutate { remove_tag => ["beats_input_codec_json_applied"] }
    if [event_type] == "flow" {
        date {
               match => [ "[flow][start]", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSSSSSZ" ]
               timezone => "UTC"
               target => "@timestamp"
        }
       ruby {
           init => "require 'time'"
           code => "event.set('flow_duration',(event.get('[flow][end]').to_i - event.get('[flow][start]').to_i))"
       }
       ruby {
           init => "require 'time'"
           code => "if event.get('flow_duration') < 0 then event.set('flow_duration',event.get('flow_duration').to_i + 86400) end"
       }
    }
    else{
             date {
               match => [ "timestamp", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSSSSSZ" ]
               timezone => "UTC"
           target => "@timestamp"
             }
        }
########Normalizing various fields to common names.
        mutate {
            copy => { "[src_ip]" => "[src][ip]" }
            copy => { "[src_port]" => "[src][port]" }
            copy => { "[dest_ip]" => "[dst][ip]" }
            copy => { "[dest_port]" => "[dst][port]" }
        }
        if [tls][sni] {
            mutate {
                copy => { "[tls][sni]" => "[lookup][host]" }
                 }
        }
        if [dns][type] == "answer" and [dns][rrtype] == "A" and [dns][rdata] != '' {
            mutate {
                 copy => { "[dns][rdata]" => "[lookup][ip]" }
                 copy => { "[dns][rrname]" => "[lookup][host]" }
            }
        }
        if [http][hostname] {
            mutate {
                copy => { "[http][hostname]" => "[lookup][host]" }
            }
            if [http][url] and [http][hostname] {
                mutate {
                    add_field => [ "[http][url_full]", "http://%{[http][hostname]}%{[http][url]}" ]
                }
            }
         }
#########End Normalization Clean up of invalid values End cleanup
##########Suricata specific Enrichment
         if [host][name] in [ "some-hostname", "some-hostname" ] {
            translate {
                field => "in_iface"
                destination => "in_iface"
                override => true
                dictionary => [
                    "eth0", "some interface name",
                    "eth1", "some interface name",

                    ]
            }
         }

#########End Suricata specific Enrichment
 }#End if type == suricata
} #End of filter
